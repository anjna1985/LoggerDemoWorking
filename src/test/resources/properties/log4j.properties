#"maxFileSize" is used to configure the maximum size of the log file. When file reaches this size, a new file will be created with the same name and the old file name will be add as an Index to it.
#"maxBackupIndex" is used to configure maximum number of files to be backup.
#"layout" is used to set the format of the log file.
#"Append" is used to set append function. If it is set to false, than every time a new file will be created rather than old file will be used for logging

#Appenders In log4j, an output destination is called an appender. It allows the destination where the logs would get saved. It supports the following types of appenders:-
#ConsoleAppender -  It logs to some standard output.
#File appender - It prints logs to some file at a particular destination.
#Rolling file appender - It is used to for a log file with maximum size.
#Layouts It is used to format the logging information in different style.

#http://blogs.quovantis.com/how-to-use-log4j-with-selenium-web-driver/
#Root logger option \u2013 This section will help to log the system generated logs in Selenium.txt file

log4j.rootLogger=debug,	file
#Here debug is the Logger level and file is used as an identifier
log4j.appender.file=org.apache.log4j.RollingFileAppender
#Here Appender type is defined as RollingFileAppender
log4j.appender.file.File=C:\\SeleniumMaster-09-27-2020\\LoggerDemo-Maven\\logs\\Selenium.log
#Here the location of file is mentioned where the system generated logs would get saved
log4j.appender.file.maxFileSize=5000KB
#maxFileSize denotes that after every 5000KB a new file will be created, means a single file will not save data more than 5000KB
log4j.appender.file.maxBackupIndex=1
#maxBackupIndex defines that how many backup files will be saved
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#layout is used to set the format of the output file
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L%m%n
#conversion pattern is used to set the conversion type.
log4j.appender.file.Append=false
#do not append the old file. Create a new log file everytime
#Application Logs \u2013 This section will help to log the information generated by manual commands in code
log4j.logger.devpinoyLogger=DEBUG, dest1
#Here debug is the Logger level and file is used as an identifier. \u201CdevpinoyLogger\u201D string will be passed to getLogger method of Logger class
log4j.appender.dest1=org.apache.log4j.RollingFileAppender
log4j.appender.dest1.maxFileSize=5000KB
log4j.appender.dest1.maxBackupIndex=3
log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
log4j.appender.dest1.layout.ConversionPattern=%d{dd/MM/yyyy HH:mm:ss} %c%m%n
log4j.appender.dest1.File=C:\\SeleniumMaster-09-27-2020\\LoggerDemo-Maven\\logs\\Application.log
#Here the location of file is mentioned where the information generated by manual commands in code will get saved.
log4j.appender.dest1.Append=false
#do not append the old file. Create a new log file everytime